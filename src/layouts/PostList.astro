---

import type { Page } from "astro";
import type { CollectionEntry } from "astro:content";

import type { CategoryId } from "@lib/settings";
import Layout from "@lib/layouts/Layout.astro";
import PostListing from "../components/PostListing.astro";


interface Props {
    title: string,
    description?: string,
    page: Page<CollectionEntry<"blog">>,
    category?: CategoryId | "series"
}


const { title, description, page, category = "default" } = Astro.props;

const baseUrl = import.meta.env.BASE_URL.replace(/\/$/, "");
---
<Layout {title}>
    <div class="listing-header">
        <div class={category}>
            <h1>{title}</h1>
            {description && <p><small>{description}</small></p>}
            <span>Showing {page.total} post{page.total !== 1 ? "s" : ""}</span>
        </div>
    </div>
    <div class="post-listing">
        {page.data.map(async (post, i) => {
            return <PostListing {post} {i} page={page.currentPage} {category} />
        })}
    </div>
    <div class="page-navigator">
        {page.currentPage > 1? <a href="1">&lt;&lt; First</a> : <span>&lt;&lt; First</span>}
        {page.url.prev? <a href={baseUrl + page.url.prev}>&lt; Prev</a>:<span>&lt; Prev</span>}
        <b>[</b>
        {
            [-2,-1,0,1,2].map((i) => {
                const pageNo = (page.currentPage+i).toString().padStart(2, "0")+(page.currentPage+i+1 > page.lastPage? "" : " ");
                if(i === 0) {
                    return <b>{pageNo}</b>
                }
                else if(page.lastPage >= page.currentPage+i && page.currentPage+i >= 1) {
                    return <a href={`${baseUrl}/blog/${page.currentPage+i}`}>{pageNo}</a>
                }
            })
        }
        <b>]</b>
        {page.url.next? <a href={baseUrl + page.url.next}>Next &gt;</a> : <span>Next &gt;</span>}
        {page.currentPage < page.lastPage? <a href={page.lastPage.toString()}>Last &gt;&gt;</a>:<span>Last &gt;&gt;</span>}
    </div>
</Layout>